USE GESTAR; -- Inicializacion del schema

DROP FUNCTION IF EXISTS DINERO_RESTANTE; -- Creacion de funcion para calcular el dinero que hay al final del mes
DELIMITER $$
CREATE FUNCTION DINERO_RESTANTE (P_GASTOS_MES INT, P_RECAUDACION_MES INT) -- Parametros a ingresar
RETURNS INT
DETERMINISTIC
BEGIN
DECLARE V_TOTAL INT;
SET V_TOTAL = P_RECAUDACION_MES - P_GASTOS_MES; -- Hacemos la resta
RETURN V_TOTAL; -- Devuelve la siguiente variable
END $$
DELIMITER ; 

SELECT DINERO_RESTANTE (600000,1100000) AS SALDO_FINAL;


DROP FUNCTION IF EXISTS SALDO_CONSORCIO; -- Creacion de funcion para revisar el saldo de los consorcios 
DELIMITER $$
CREATE FUNCTION SALDO_CONSORCIO (P_CONSORCIO VARCHAR(255)) -- Parametro a ingresar
RETURNS INT
DETERMINISTIC
BEGIN
DECLARE V_ID_CONSORCIO INT;
DECLARE V_ID_CAJA INT;
DECLARE V_SALDO_FINAL INT;

SELECT ID INTO V_ID_CONSORCIO FROM CONSORCIO WHERE DIRECCION = (P_CONSORCIO); -- Obtenemos el ID del consorcio

SELECT ID_CAJA INTO V_ID_CAJA FROM CAJA_TOTAL WHERE ID_EXPENSA IN (SELECT ID_EXPENSA FROM EXPENSA WHERE ID_CONSORCIO = V_ID_CONSORCIO); -- Obtenemos el ID de la caja total

SELECT (INGRESOS_BANCO - EGRESOS_BANCO) INTO V_SALDO_FINAL FROM CAJA_BANCO WHERE ID_CAJA = V_ID_CAJA; -- Calcula el saldo final del consonsorcio 

RETURN V_SALDO_FINAL; -- Devuelve la siguiente variable
END $$
DELIMITER ;

SELECT SALDO_CONSORCIO('BARRIO CERRADO LAS LOMAS');